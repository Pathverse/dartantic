// GENERATED BY DARTANTIC BLOC GENERATOR

part of 'zbloc_test.dart';

abstract class DttBlocTestUserState extends Equatable {
  const DttBlocTestUserState() : super();
  @override
  List<Object?> get props {
    return [];
  }
  static DttBlocTestUserState initial() {
    return const DttBlocTestUserInitial();
  }
  static DttBlocTestUserState loading() {
    return const DttBlocTestUserLoading();
  }
  static DttBlocTestUserState error(String message) {
    return DttBlocTestUserError(message);
  }
  static DttBlocTestUserState success(DttBlocTestUserStateData data) {
    return data;
  }
}
class DttBlocTestUserStateData extends DttBlocTestUserState {
  final String name;
  final int age;
  final String? email;
  DttBlocTestUserStateData(this.name, this.age, this.email);
  DttBlocTestUserStateData.fromMap(Map<String, dynamic> map) : name = map['name'] as String, age = map['age'] as int, email = map['email'] as String? {
  }
  Map<String, dynamic> toMap() {
    return {
        'name': name,
        'age': age,
        'email': email,
      };
  }
  DttBlocTestUserStateData copyWith(String? name, int? age, String? email) {
    return DttBlocTestUserStateData(
      name ?? this.name,
      age ?? this.age,
      email ?? this.email,
    );
  }
  @override
  List<Object?> get props {
    return [
        name,
        age,
        email,
      ];
  }
}
class DttBlocTestUserLoading extends DttBlocTestUserState {
  const DttBlocTestUserLoading() : super();
  @override
  List<Object?> get props {
    return [
      ];
  }
}
class DttBlocTestUserError extends DttBlocTestUserState {
  final String message;
  const DttBlocTestUserError(this.message);
  @override
  List<Object?> get props {
    return [message];
  }
}
class DttBlocTestUserInitial extends DttBlocTestUserState {
  const DttBlocTestUserInitial() : super();
  @override
  List<Object?> get props {
    return [
      ];
  }
}
